{
  "stats": {
    "suites": 9,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-27T10:30:33.528Z",
    "end": "2024-03-27T10:30:39.789Z",
    "duration": 6261,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a86a94be-ff63-4f59-a538-17a493048325",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "beb766f4-3e5f-4b06-9888-7a2890ed1f41",
          "title": "GET Agents",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\GETtest.js",
          "file": "\\tests\\GETtest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET Agents\"",
              "fullTitle": "GET Agents \"before all\" hook in \"GET Agents\"",
              "timedOut": false,
              "duration": 2067,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.get('/agents');\n    jsonData = response.data;\n    //console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "65d3fdbd-82a3-44bd-9ff5-ec9168d15a79",
              "parentUUID": "beb766f4-3e5f-4b06-9888-7a2890ed1f41",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 200",
              "fullTitle": "GET Agents Status code is 200",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "965b998f-c467-4285-affd-d55cc569f3c3",
              "parentUUID": "beb766f4-3e5f-4b06-9888-7a2890ed1f41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number is correct",
              "fullTitle": "GET Agents Number is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedNumber = 1;\nexpect(jsonData.length).to.equal(expectedNumber);",
              "err": {},
              "uuid": "6196410f-e993-46ea-a884-adb495862f5c",
              "parentUUID": "beb766f4-3e5f-4b06-9888-7a2890ed1f41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Schema validation",
              "fullTitle": "GET Agents Schema validation",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const schema = {\n    \"type\": \"array\",\n    \"default\": [],\n    \"title\": \"Root Schema\",\n    \"items\": {\n        \"type\": \"object\",\n        \"default\": {},\n        \"title\": \"A Schema\",\n        \"required\": [\n            \"available\",\n            \"occasional\",\n            \"id\",\n            \"ticket_scope\",\n            \"created_at\",\n            \"updated_at\",\n            \"last_active_at\",\n            \"available_since\",\n            \"type\",\n            \"contact\",\n            \"deactivated\",\n            \"signature\",\n            \"focus_mode\"\n        ],\n        \"properties\": {\n            \"available\": {\n                \"type\": \"boolean\",\n                \"default\": false,\n                \"title\": \"The available Schema\",\n                \"examples\": [\n                    false\n                ]\n            },\n            \"occasional\": {\n                \"type\": \"boolean\",\n                \"default\": false,\n                \"title\": \"The occasional Schema\",\n                \"examples\": [\n                    false\n                ]\n            },\n            \"id\": {\n                \"type\": \"integer\",\n                \"default\": 0,\n                \"title\": \"The id Schema\",\n                \"examples\": [\n                    153010305589\n                ]\n            },\n            \"ticket_scope\": {\n                \"type\": \"integer\",\n                \"default\": 0,\n                \"title\": \"The ticket_scope Schema\",\n                \"examples\": [\n                    1\n                ]\n            },\n            \"created_at\": {\n                \"type\": \"string\",\n                \"default\": \"\",\n                \"title\": \"The created_at Schema\",\n                \"examples\": [\n                    \"2024-03-19T07:13:18Z\"\n                ]\n            },\n            \"updated_at\": {\n                \"type\": \"string\",\n                \"default\": \"\",\n                \"title\": \"The updated_at Schema\",\n                \"examples\": [\n                    \"2024-03-21T15:19:09Z\"\n                ]\n            },\n            \"last_active_at\": {\n                \"type\": \"string\",\n                \"default\": \"\",\n                \"title\": \"The last_active_at Schema\",\n                \"examples\": [\n                    \"2024-03-21T15:19:09Z\"\n                ]\n            },\n            \"available_since\": {\n                \"type\": \"null\",\n                \"default\": null,\n                \"title\": \"The available_since Schema\",\n                \"examples\": [\n                    null\n                ]\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"default\": \"\",\n                \"title\": \"The type Schema\",\n                \"examples\": [\n                    \"support_agent\"\n                ]\n            },\n            \"contact\": {\n                \"type\": \"object\",\n                \"default\": {},\n                \"title\": \"The contact Schema\",\n                \"required\": [\n                    \"active\",\n                    \"email\",\n                    \"job_title\",\n                    \"language\",\n                    \"last_login_at\",\n                    \"mobile\",\n                    \"name\",\n                    \"phone\",\n                    \"time_zone\",\n                    \"created_at\",\n                    \"updated_at\"\n                ],\n                \"properties\": {\n                    \"active\": {\n                        \"type\": \"boolean\",\n                        \"default\": false,\n                        \"title\": \"The active Schema\",\n                        \"examples\": [\n                            true\n                        ]\n                    },\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"title\": \"The email Schema\",\n                        \"examples\": [\n                            \"arshmahshakeel555@gmail.com\"\n                        ]\n                    },\n                    \"job_title\": {\n                        \"type\": \"null\",\n                        \"default\": null,\n                        \"title\": \"The job_title Schema\",\n                        \"examples\": [\n                            null\n                        ]\n                    },\n                    \"language\": {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"title\": \"The language Schema\",\n                        \"examples\": [\n                            \"en\"\n                        ]\n                    },\n                    \"last_login_at\": {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"title\": \"The last_login_at Schema\",\n                        \"examples\": [\n                            \"2024-03-21T09:40:28Z\"\n                        ]\n                    },\n                    \"mobile\": {\n                        \"type\": \"null\",\n                        \"default\": null,\n                        \"title\": \"The mobile Schema\",\n                        \"examples\": [\n                            null\n                        ]\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"title\": \"The name Schema\",\n                        \"examples\": [\n                            \"Arshmah Shakeel\"\n                        ]\n                    },\n                    \"phone\": {\n                        \"type\": \"null\",\n                        \"default\": null,\n                        \"title\": \"The phone Schema\",\n                        \"examples\": [\n                            null\n                        ]\n                    },\n                    \"time_zone\": {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"title\": \"The time_zone Schema\",\n                        \"examples\": [\n                            \"Casablanca\"\n                        ]\n                    },\n                    \"created_at\": {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"title\": \"The created_at Schema\",\n                        \"examples\": [\n                            \"2024-03-19T07:13:18Z\"\n                        ]\n                    },\n                    \"updated_at\": {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"title\": \"The updated_at Schema\",\n                        \"examples\": [\n                            \"2024-03-21T15:19:07Z\"\n                        ]\n                    }\n                },\n                \"examples\": [{\n                    \"active\": true,\n                    \"email\": \"arshmahshakeel555@gmail.com\",\n                    \"job_title\": null,\n                    \"language\": \"en\",\n                    \"last_login_at\": \"2024-03-21T09:40:28Z\",\n                    \"mobile\": null,\n                    \"name\": \"Arshmah Shakeel\",\n                    \"phone\": null,\n                    \"time_zone\": \"Casablanca\",\n                    \"created_at\": \"2024-03-19T07:13:18Z\",\n                    \"updated_at\": \"2024-03-21T15:19:07Z\"\n                }]\n            },\n            \"deactivated\": {\n                \"type\": \"boolean\",\n                \"default\": false,\n                \"title\": \"The deactivated Schema\",\n                \"examples\": [\n                    false\n                ]\n            },\n            \"signature\": {\n                \"type\": \"null\",\n                \"default\": null,\n                \"title\": \"The signature Schema\",\n                \"examples\": [\n                    null\n                ]\n            },\n            \"focus_mode\": {\n                \"type\": \"boolean\",\n                \"default\": false,\n                \"title\": \"The focus_mode Schema\",\n                \"examples\": [\n                    true\n                ]\n            }\n        },\n        \"examples\": [{\n            \"available\": false,\n            \"occasional\": false,\n            \"id\": 153010305589,\n            \"ticket_scope\": 1,\n            \"created_at\": \"2024-03-19T07:13:18Z\",\n            \"updated_at\": \"2024-03-21T15:19:09Z\",\n            \"last_active_at\": \"2024-03-21T15:19:09Z\",\n            \"available_since\": null,\n            \"type\": \"support_agent\",\n            \"contact\": {\n                \"active\": true,\n                \"email\": \"arshmahshakeel555@gmail.com\",\n                \"job_title\": null,\n                \"language\": \"en\",\n                \"last_login_at\": \"2024-03-21T09:40:28Z\",\n                \"mobile\": null,\n                \"name\": \"Arshmah Shakeel\",\n                \"phone\": null,\n                \"time_zone\": \"Casablanca\",\n                \"created_at\": \"2024-03-19T07:13:18Z\",\n                \"updated_at\": \"2024-03-21T15:19:07Z\"\n            },\n            \"deactivated\": false,\n            \"signature\": null,\n            \"focus_mode\": true\n        }]\n    },\n    \"examples\": [\n        [{\n            \"available\": false,\n            \"occasional\": false,\n            \"id\": 153010305589,\n            \"ticket_scope\": 1,\n            \"created_at\": \"2024-03-19T07:13:18Z\",\n            \"updated_at\": \"2024-03-21T15:19:09Z\",\n            \"last_active_at\": \"2024-03-21T15:19:09Z\",\n            \"available_since\": null,\n            \"type\": \"support_agent\",\n            \"contact\": {\n                \"active\": true,\n                \"email\": \"arshmahshakeel555@gmail.com\",\n                \"job_title\": null,\n                \"language\": \"en\",\n                \"last_login_at\": \"2024-03-21T09:40:28Z\",\n                \"mobile\": null,\n                \"name\": \"Arshmah Shakeel\",\n                \"phone\": null,\n                \"time_zone\": \"Casablanca\",\n                \"created_at\": \"2024-03-19T07:13:18Z\",\n                \"updated_at\": \"2024-03-21T15:19:07Z\"\n            },\n            \"deactivated\": false,\n            \"signature\": null,\n            \"focus_mode\": true\n        }]\n    ]\n};\n    \nconst ajv = new Ajv();\nconst validate = ajv.compile(schema);\nconst valid = validate(jsonData);\nexpect(valid, validate.errors ? JSON.stringify(validate.errors) : 'Schema is valid').to.be.true;",
              "err": {},
              "uuid": "667d7d2c-4f1b-442b-8935-bf5ed049152b",
              "parentUUID": "beb766f4-3e5f-4b06-9888-7a2890ed1f41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "965b998f-c467-4285-affd-d55cc569f3c3",
            "6196410f-e993-46ea-a884-adb495862f5c",
            "667d7d2c-4f1b-442b-8935-bf5ed049152b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "28539a87-518e-438b-b91a-f3b200b5834f",
          "title": "GET Companies",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\GETtest.js",
          "file": "\\tests\\GETtest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET Companies\"",
              "fullTitle": "GET Companies \"before all\" hook in \"GET Companies\"",
              "timedOut": false,
              "duration": 405,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.get('/companies');\n    jsonData = response.data;\n    //console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "2a9f9190-3d07-4067-983b-c562a2b83964",
              "parentUUID": "28539a87-518e-438b-b91a-f3b200b5834f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 200",
              "fullTitle": "GET Companies Status code is 200",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "c59c2110-f0f6-47f0-ab3c-7ca36a2b515f",
              "parentUUID": "28539a87-518e-438b-b91a-f3b200b5834f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number is correct",
              "fullTitle": "GET Companies Number is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedNumber = 1;\nexpect(jsonData.length).to.equal(expectedNumber);",
              "err": {},
              "uuid": "e49210f8-c095-40b5-91ec-1f34d18cc87a",
              "parentUUID": "28539a87-518e-438b-b91a-f3b200b5834f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c59c2110-f0f6-47f0-ab3c-7ca36a2b515f",
            "e49210f8-c095-40b5-91ec-1f34d18cc87a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "3abf0b4e-08cf-4bbe-9726-f749d17a8d98",
          "title": "GET Contacts",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\GETtest.js",
          "file": "\\tests\\GETtest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET Contacts\"",
              "fullTitle": "GET Contacts \"before all\" hook in \"GET Contacts\"",
              "timedOut": false,
              "duration": 882,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.get('/contacts');\n    jsonData = response.data;\n    //console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "e66dbbdd-47f5-4e61-846e-97ed315b2561",
              "parentUUID": "3abf0b4e-08cf-4bbe-9726-f749d17a8d98",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 200",
              "fullTitle": "GET Contacts Status code is 200",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "5c80757d-aa02-4ff5-82d2-078b68cf4739",
              "parentUUID": "3abf0b4e-08cf-4bbe-9726-f749d17a8d98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number is correct",
              "fullTitle": "GET Contacts Number is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedNumber = 15;\nexpect(jsonData.length).to.equal(expectedNumber);",
              "err": {},
              "uuid": "79b1b242-195e-4555-a5ba-e1107ba93bf5",
              "parentUUID": "3abf0b4e-08cf-4bbe-9726-f749d17a8d98",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c80757d-aa02-4ff5-82d2-078b68cf4739",
            "79b1b242-195e-4555-a5ba-e1107ba93bf5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "3ce54d05-143e-40af-a32b-d9de61a2942a",
          "title": "GET Groups",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\GETtest.js",
          "file": "\\tests\\GETtest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET Groups\"",
              "fullTitle": "GET Groups \"before all\" hook in \"GET Groups\"",
              "timedOut": false,
              "duration": 354,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.get('/groups');\n    jsonData = response.data;\n    //console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "579b1044-de33-4749-8ac4-fb0268e3a554",
              "parentUUID": "3ce54d05-143e-40af-a32b-d9de61a2942a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 200",
              "fullTitle": "GET Groups Status code is 200",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "2091d965-2d3f-4955-b573-c10bdfb08eb7",
              "parentUUID": "3ce54d05-143e-40af-a32b-d9de61a2942a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number is correct",
              "fullTitle": "GET Groups Number is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedNumber = 3;\nexpect(jsonData.length).to.equal(expectedNumber);",
              "err": {},
              "uuid": "55f6a451-cf99-4b37-81ec-2ec97986c481",
              "parentUUID": "3ce54d05-143e-40af-a32b-d9de61a2942a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2091d965-2d3f-4955-b573-c10bdfb08eb7",
            "55f6a451-cf99-4b37-81ec-2ec97986c481"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "92f6a3ff-f58e-496e-9518-2c9732a6b75f",
          "title": "GET Roles",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\GETtest.js",
          "file": "\\tests\\GETtest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET Roles\"",
              "fullTitle": "GET Roles \"before all\" hook in \"GET Roles\"",
              "timedOut": false,
              "duration": 382,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.get('/roles');\n    Data = response.data;\n    //console.log(Data);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "5df3108a-79c2-44e4-b83c-92b06c099f9b",
              "parentUUID": "92f6a3ff-f58e-496e-9518-2c9732a6b75f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 200",
              "fullTitle": "GET Roles Status code is 200",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "db876098-943f-40f1-941d-f459a52196c1",
              "parentUUID": "92f6a3ff-f58e-496e-9518-2c9732a6b75f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number is correct",
              "fullTitle": "GET Roles Number is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedNumber = 8;\nexpect(Data.length).to.equal(expectedNumber);",
              "err": {},
              "uuid": "ea927402-c8e0-4891-aa43-9bc7c2de7b13",
              "parentUUID": "92f6a3ff-f58e-496e-9518-2c9732a6b75f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db876098-943f-40f1-941d-f459a52196c1",
            "ea927402-c8e0-4891-aa43-9bc7c2de7b13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "bd0d5915-e464-4370-b523-0dd0996a560c",
          "title": "POST Time Entries",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\timeEntriesTests.js",
          "file": "\\tests\\timeEntriesTests.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST Time Entries\"",
              "fullTitle": "POST Time Entries \"before all\" hook in \"POST Time Entries\"",
              "timedOut": false,
              "duration": 511,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.post('/tickets/2/time_entries', {\n        \"billable\" : true,\n        \"note\" : \"Invoice Prepartion\",\n        \"timer_running\" : false,\n        \"time_spent\" : \"10:40\"\n      });\n    jsonData = response.data;\n    id = jsonData.id;\n    console.log(id);\n    console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "417a6bdd-34e8-4507-8e2c-ea09366ffea9",
              "parentUUID": "bd0d5915-e464-4370-b523-0dd0996a560c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 201",
              "fullTitle": "POST Time Entries Status code is 201",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(201);",
              "err": {},
              "uuid": "e926bf95-c739-44d7-beaa-5aa8e682f1f3",
              "parentUUID": "bd0d5915-e464-4370-b523-0dd0996a560c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e926bf95-c739-44d7-beaa-5aa8e682f1f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "16a3c1cd-2d9a-4bfb-8952-f3b0b8d1bd38",
          "title": "GET Time Entries",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\timeEntriesTests.js",
          "file": "\\tests\\timeEntriesTests.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET Time Entries\"",
              "fullTitle": "GET Time Entries \"before all\" hook in \"GET Time Entries\"",
              "timedOut": false,
              "duration": 388,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.get('/time_entries');\n    jsonData = response.data;\n    //console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "398e418a-4f34-4f43-9c50-a8d5d32de89b",
              "parentUUID": "16a3c1cd-2d9a-4bfb-8952-f3b0b8d1bd38",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 200",
              "fullTitle": "GET Time Entries Status code is 200",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "2ccfa789-189a-45b8-9163-fd6c021f7e0c",
              "parentUUID": "16a3c1cd-2d9a-4bfb-8952-f3b0b8d1bd38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number is correct",
              "fullTitle": "GET Time Entries Number is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedNumber = 9;\nexpect(jsonData.length).to.equal(expectedNumber);",
              "err": {},
              "uuid": "2a1c5b7a-a264-4dac-bbda-04448a997f1b",
              "parentUUID": "16a3c1cd-2d9a-4bfb-8952-f3b0b8d1bd38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ccfa789-189a-45b8-9163-fd6c021f7e0c",
            "2a1c5b7a-a264-4dac-bbda-04448a997f1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "e87c8f85-83f4-4a79-a61e-f75aaa251af3",
          "title": "Delete Time Entries",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\timeEntriesTests.js",
          "file": "\\tests\\timeEntriesTests.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Delete Time Entries\"",
              "fullTitle": "Delete Time Entries \"before all\" hook in \"Delete Time Entries\"",
              "timedOut": false,
              "duration": 811,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.delete('/time_entries/' + id );\n    jsonData = response.data;\n    console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "dd0c4e79-379c-4988-9836-fbf56192ba99",
              "parentUUID": "e87c8f85-83f4-4a79-a61e-f75aaa251af3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 204",
              "fullTitle": "Delete Time Entries Status code is 204",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(204);",
              "err": {},
              "uuid": "577f3c3e-e186-435e-a4fa-3a40924c06a9",
              "parentUUID": "e87c8f85-83f4-4a79-a61e-f75aaa251af3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "577f3c3e-e186-435e-a4fa-3a40924c06a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "8a1d1769-7382-4af3-813b-91936d728f88",
          "title": "GET Time Entries",
          "fullFile": "C:\\Users\\Emumba\\Desktop\\freshdesk\\tests\\timeEntriesTests.js",
          "file": "\\tests\\timeEntriesTests.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET Time Entries\"",
              "fullTitle": "GET Time Entries \"before all\" hook in \"GET Time Entries\"",
              "timedOut": false,
              "duration": 375,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    response = await axios.get('/time_entries');\n    jsonData = response.data;\n    //console.log(jsonData);\n} catch(error) {\n    console.error('Error Occurred:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "a0945330-fc1c-4c0e-b52c-08031b1a2ced",
              "parentUUID": "8a1d1769-7382-4af3-813b-91936d728f88",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Status code is 200",
              "fullTitle": "GET Time Entries Status code is 200",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "de135807-9f3d-44ca-9bbe-d298537ece94",
              "parentUUID": "8a1d1769-7382-4af3-813b-91936d728f88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number is correct",
              "fullTitle": "GET Time Entries Number is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedNumber = 8;\nexpect(jsonData.length).to.equal(expectedNumber);",
              "err": {},
              "uuid": "e201e871-5666-46fe-966b-125a25b3d046",
              "parentUUID": "8a1d1769-7382-4af3-813b-91936d728f88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de135807-9f3d-44ca-9bbe-d298537ece94",
            "e201e871-5666-46fe-966b-125a25b3d046"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}